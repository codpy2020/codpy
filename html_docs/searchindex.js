Search.setIndex({"alltitles": {"API": [[13, null]], "Benchmarks": [[1, null]], "CodPy description": [[3, null]], "Documentation": [[4, null]], "Documentation:": [[5, null]], "General algorithms": [[0, null]], "General setting": [[3, "general-setting"]], "Indices and tables": [[5, "indices-and-tables"]], "Installation Guide": [[6, null]], "Introduction": [[3, "introduction"]], "Kernel class": [[7, null]], "Kernels and maps": [[2, null]], "Learn and Explore:": [[5, null]], "Library Reference:": [[5, null]], "Linear Algebra module": [[8, null]], "Module contents": [[13, "module-contents"]], "PDE module": [[10, null]], "Permutation algorithms": [[11, null]], "Python Function: Projection Operator": [[3, "python-function-projection-operator"]], "Requirements": [[6, "requirements"]], "Sampling algorithms": [[12, null]], "Submodules": [[13, "submodules"]], "Technical documentation": [[4, "technical-documentation"]], "Welcome to Codpy\u2019s documentation!": [[5, null]], "src.algs module": [[13, "src-algs-module"]], "src.core module": [[13, "src-core-module"]], "src.pde module": [[13, "src-pde-module"]], "src.permutation module": [[13, "src-permutation-module"]], "src.sampling module": [[13, "src-sampling-module"]]}, "docnames": ["algs", "benchmark", "core", "description", "documentation", "index", "install", "kernel", "lalg", "modules", "pde", "permutation", "sampling", "src"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["algs.rst", "benchmark.rst", "core.rst", "description.rst", "documentation.rst", "index.rst", "install.rst", "kernel.rst", "lalg.rst", "modules.rst", "pde.rst", "permutation.rst", "sampling.rst", "src.rst"], "indexentries": {"__call__() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.__call__", false]], "add() (codpy.algs.alg method)": [[0, "codpy.algs.alg.add", false]], "add() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.add", false]], "alg (class in codpy.algs)": [[0, "codpy.algs.alg", false]], "check_map_strings() (in module codpy.core)": [[2, "codpy.core.check_map_strings", false]], "checkkernel_strings() (in module codpy.core)": [[2, "codpy.core.checkkernel_strings", false]], "cholesky() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.cholesky", false]], "codpy.algs": [[0, "module-codpy.algs", false]], "codpy.core": [[2, "module-codpy.core", false]], "codpy.kernel": [[7, "module-codpy.kernel", false]], "codpy.lalg": [[8, "module-codpy.lalg", false]], "codpy.pde": [[10, "module-codpy.pde", false]], "codpy.permutation": [[11, "module-codpy.permutation", false]], "codpy.sampling": [[12, "module-codpy.sampling", false]], "coefficients() (codpy.core.op method)": [[2, "codpy.core.op.coefficients", false]], "cranknicolson() (in module codpy.pde)": [[10, "codpy.pde.CrankNicolson", false]], "default_kernel_functor() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.default_kernel_functor", false]], "default_multiquadricnormkernel_map() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.default_multiquadricnormkernel_map", false]], "default_multiquadrictensorkernel_map() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.default_multiquadrictensorkernel_map", false]], "default_sincardsquaretensorkernel_map() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.default_sincardsquaretensorkernel_map", false]], "default_sincardtensorkernel_map() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.default_sincardtensorkernel_map", false]], "diffops (class in codpy.core)": [[2, "codpy.core.diffops", false]], "discrepancy() (in module codpy.core)": [[2, "codpy.core.discrepancy", false]], "discrepancy_error() (codpy.core.op method)": [[2, "codpy.core.op.discrepancy_error", false]], "discrepancy_functional (class in codpy.core)": [[2, "codpy.core.discrepancy_functional", false]], "distance_labelling() (in module codpy.core)": [[2, "codpy.core.distance_labelling", false]], "dnm() (codpy.core.op method)": [[2, "codpy.core.op.Dnm", false]], "eval() (codpy.core.discrepancy_functional method)": [[2, "codpy.core.discrepancy_functional.eval", false], [2, "id0", false]], "extrapolation() (codpy.core.op method)": [[2, "codpy.core.op.extrapolation", false]], "fix_nonpositive_semidefinite() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.fix_nonpositive_semidefinite", false]], "get_delta() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_Delta", false]], "get_fx() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_fx", false]], "get_kernel() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_kernel", false]], "get_kernel_ptr() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.get_kernel_ptr", false]], "get_knm() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_knm", false]], "get_knm_inv() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_knm_inv", false]], "get_normals() (in module codpy.sampling)": [[12, "codpy.sampling.get_normals", false]], "get_normals_like() (in module codpy.sampling)": [[12, "codpy.sampling.get_normals_like", false]], "get_order() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_order", false]], "get_polynomial_regressor() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_polynomial_regressor", false]], "get_polynomial_values() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_polynomial_values", false]], "get_random_normals_like() (in module codpy.sampling)": [[12, "codpy.sampling.get_random_normals_like", false]], "get_random_uniforms_like() (in module codpy.sampling)": [[12, "codpy.sampling.get_random_uniforms_like", false]], "get_theta() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_theta", false]], "get_uniforms() (in module codpy.sampling)": [[12, "codpy.sampling.get_uniforms", false]], "get_uniforms_like() (in module codpy.sampling)": [[12, "codpy.sampling.get_uniforms_like", false]], "get_x() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_x", false]], "get_y() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.get_y", false]], "gradient_denoiser() (codpy.core.op method)": [[2, "codpy.core.op.gradient_denoiser", false]], "grid_projection() (in module codpy.permutation)": [[11, "codpy.permutation.grid_projection", false]], "hessian() (codpy.core.diffops method)": [[2, "codpy.core.diffops.hessian", false]], "hybridgreedynystroem() (codpy.algs.alg method)": [[0, "codpy.algs.alg.HybridGreedyNystroem", false]], "init() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.init", false]], "interpolation() (codpy.core.op method)": [[2, "codpy.core.op.interpolation", false]], "inverse() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.inverse", false]], "kernel (class in codpy.kernel)": [[7, "codpy.kernel.Kernel", false]], "kernel_conditional_density_estimator() (in module codpy.sampling)": [[12, "codpy.sampling.kernel_conditional_density_estimator", false]], "kernel_density_estimator() (in module codpy.sampling)": [[12, "codpy.sampling.kernel_density_estimator", false]], "kernel_distance() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.kernel_distance", false]], "kernel_helper() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.kernel_helper", false]], "kernel_interface (class in codpy.core)": [[2, "codpy.core.kernel_interface", false]], "kernel_setter() (in module codpy.core)": [[2, "codpy.core.kernel_setter", false]], "kernel_setters (class in codpy.core)": [[2, "codpy.core.kernel_setters", false]], "kmeans() (in module codpy.sampling)": [[12, "codpy.sampling.kmeans", false]], "knm() (codpy.core.op method)": [[2, "codpy.core.op.Knm", false]], "knm() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.Knm", false]], "knm_inv() (codpy.core.op method)": [[2, "codpy.core.op.Knm_inv", false]], "lalg (class in codpy.lalg)": [[8, "codpy.lalg.lalg", false]], "leray() (codpy.core.diffops method)": [[2, "codpy.core.diffops.Leray", false]], "leray_t() (codpy.core.diffops method)": [[2, "codpy.core.diffops.Leray_T", false]], "lsap() (in module codpy.permutation)": [[11, "codpy.permutation.lsap", false]], "lstsq() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.lstsq", false]], "map() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.map", false]], "map_helper() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.map_helper", false]], "map_invertion() (in module codpy.permutation)": [[11, "codpy.permutation.map_invertion", false]], "map_setters (class in codpy.core)": [[2, "codpy.core.map_setters", false]], "map_setters.set (class in codpy.core)": [[2, "codpy.core.map_setters.set", false]], "match() (in module codpy.permutation)": [[11, "codpy.permutation.match", false]], "match() (in module codpy.sampling)": [[12, "codpy.sampling.match", false]], "minibatchkmeans() (in module codpy.sampling)": [[12, "codpy.sampling.MiniBatchkmeans", false]], "module": [[0, "module-codpy.algs", false], [2, "module-codpy.core", false], [7, "module-codpy.kernel", false], [8, "module-codpy.lalg", false], [10, "module-codpy.pde", false], [11, "module-codpy.permutation", false], [12, "module-codpy.sampling", false]], "nabla() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nabla", false]], "nabla_inv() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nabla_inv", false]], "nabla_knm() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nabla_Knm", false]], "nablat() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nablaT", false]], "nablat_inv() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nablaT_inv", false]], "nablat_nabla() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nablaT_nabla", false]], "nablat_nabla_inv() (codpy.core.diffops method)": [[2, "codpy.core.diffops.nablaT_nabla_inv", false]], "norm() (codpy.core.op method)": [[2, "codpy.core.op.norm", false]], "norm_projection() (codpy.core.op method)": [[2, "codpy.core.op.norm_projection", false]], "op (class in codpy.core)": [[2, "codpy.core.op", false]], "pi() (codpy.algs.alg method)": [[0, "codpy.algs.alg.Pi", false]], "pipe_kernel_fun() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.pipe_kernel_fun", false]], "pipe_kernel_ptr() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.pipe_kernel_ptr", false]], "polar() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.polar", false]], "prod() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.prod", false]], "projection() (codpy.core.op method)": [[2, "codpy.core.op.projection", false]], "rejection_sampling() (in module codpy.sampling)": [[12, "codpy.sampling.rejection_sampling", false]], "rescale() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.rescale", false]], "rescale() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.rescale", false]], "scalar_product() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.scalar_product", false]], "scipy_lsap() (in module codpy.permutation)": [[11, "codpy.permutation.scipy_lsap", false]], "select() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.select", false]], "selfadjointeigendecomposition() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.SelfAdjointEigenDecomposition", false]], "set() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set", false]], "set_absnormkernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_absnormkernel", false]], "set_affine_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_affine_map", false]], "set_custom_kernel() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_custom_kernel", false]], "set_dotproduct_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_dotproduct_kernel", false]], "set_erf_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_erf_map", false]], "set_erfinv_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_erfinv_map", false]], "set_exp_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_exp_map", false]], "set_fx() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_fx", false]], "set_gaussian_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_gaussian_kernel", false]], "set_gaussianper_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_gaussianper_kernel", false]], "set_grid_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_grid_map", false]], "set_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_kernel", false]], "set_kernel() (in module codpy.core)": [[2, "codpy.core.set_kernel", false]], "set_kernel_ptr() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.set_kernel_ptr", false]], "set_kernel_ptr() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_kernel_ptr", false]], "set_linear_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_linear_map", false]], "set_linear_regressor_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_linear_regressor_kernel", false]], "set_log_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_log_map", false]], "set_map() (in module codpy.core)": [[2, "codpy.core.set_map", false]], "set_matern_norm_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_matern_norm_kernel", false]], "set_matern_tensor_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_matern_tensor_kernel", false]], "set_mean_distance_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_mean_distance_map", false]], "set_min_distance_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_min_distance_map", false]], "set_multiquadricnorm_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_multiquadricnorm_kernel", false]], "set_multiquadrictensor_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_multiquadrictensor_kernel", false]], "set_num_threads() (in module codpy.core)": [[2, "codpy.core.set_num_threads", false]], "set_polynomial_order() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.set_polynomial_order", false]], "set_regularization() (codpy.core.kernel_interface method)": [[2, "codpy.core.kernel_interface.set_regularization", false]], "set_scalar_product_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_scalar_product_kernel", false]], "set_scale_factor_helper() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_scale_factor_helper", false]], "set_scale_factor_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_scale_factor_map", false]], "set_scale_std_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_scale_std_map", false]], "set_sincardsquaretensor_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_sincardsquaretensor_kernel", false]], "set_sincardtensor_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_sincardtensor_kernel", false]], "set_standard_mean_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_standard_mean_map", false]], "set_standard_min_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_standard_min_map", false]], "set_tensornorm_kernel() (codpy.core.kernel_setters method)": [[2, "codpy.core.kernel_setters.set_tensornorm_kernel", false]], "set_theta() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_theta", false]], "set_unitcube_erfinv_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_unitcube_erfinv_map", false]], "set_unitcube_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_unitcube_map", false]], "set_unitcube_mean_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_unitcube_mean_map", false]], "set_unitcube_min_map() (codpy.core.map_setters method)": [[2, "codpy.core.map_setters.set_unitcube_min_map", false]], "set_verbose() (in module codpy.core)": [[2, "codpy.core.set_verbose", false]], "set_x() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_x", false]], "set_y() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.set_y", false]], "sharp_discrepancy() (in module codpy.sampling)": [[12, "codpy.sampling.sharp_discrepancy", false]], "svd() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.svd", false]], "taylor_expansion() (in module codpy.pde)": [[10, "codpy.pde.taylor_expansion", false]], "transpose() (codpy.lalg.lalg method)": [[8, "codpy.lalg.lalg.transpose", false]], "update() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.update", false]], "update_set() (codpy.kernel.kernel method)": [[7, "codpy.kernel.Kernel.update_set", false]], "vandermonde() (in module codpy.lalg)": [[8, "codpy.lalg.VanDerMonde", false]]}, "objects": {"codpy": [[0, 0, 0, "-", "algs"], [2, 0, 0, "-", "core"], [7, 0, 0, "-", "kernel"], [8, 0, 0, "-", "lalg"], [10, 0, 0, "-", "pde"], [11, 0, 0, "-", "permutation"], [12, 0, 0, "-", "sampling"]], "codpy.algs": [[0, 1, 1, "", "alg"]], "codpy.algs.alg": [[0, 2, 1, "", "HybridGreedyNystroem"], [0, 2, 1, "", "Pi"], [0, 2, 1, "", "add"]], "codpy.core": [[2, 3, 1, "", "check_map_strings"], [2, 3, 1, "", "checkkernel_strings"], [2, 1, 1, "", "diffops"], [2, 3, 1, "", "discrepancy"], [2, 1, 1, "", "discrepancy_functional"], [2, 3, 1, "", "distance_labelling"], [2, 1, 1, "", "kernel_interface"], [2, 3, 1, "", "kernel_setter"], [2, 1, 1, "", "kernel_setters"], [2, 1, 1, "", "map_setters"], [2, 1, 1, "", "op"], [2, 3, 1, "", "set_kernel"], [2, 3, 1, "", "set_map"], [2, 3, 1, "", "set_num_threads"], [2, 3, 1, "", "set_verbose"]], "codpy.core.diffops": [[2, 2, 1, "", "Leray"], [2, 2, 1, "", "Leray_T"], [2, 2, 1, "", "hessian"], [2, 2, 1, "", "nabla"], [2, 2, 1, "", "nablaT"], [2, 2, 1, "", "nablaT_inv"], [2, 2, 1, "", "nablaT_nabla"], [2, 2, 1, "", "nablaT_nabla_inv"], [2, 2, 1, "", "nabla_Knm"], [2, 2, 1, "", "nabla_inv"]], "codpy.core.discrepancy_functional": [[2, 2, 1, "id0", "eval"]], "codpy.core.kernel_interface": [[2, 2, 1, "", "get_kernel_ptr"], [2, 2, 1, "", "init"], [2, 2, 1, "", "pipe_kernel_fun"], [2, 2, 1, "", "pipe_kernel_ptr"], [2, 2, 1, "", "rescale"], [2, 2, 1, "", "set_kernel_ptr"], [2, 2, 1, "", "set_polynomial_order"], [2, 2, 1, "", "set_regularization"]], "codpy.core.kernel_setters": [[2, 2, 1, "", "default_multiquadricnormkernel_map"], [2, 2, 1, "", "default_multiquadrictensorkernel_map"], [2, 2, 1, "", "default_sincardsquaretensorkernel_map"], [2, 2, 1, "", "default_sincardtensorkernel_map"], [2, 2, 1, "", "kernel_helper"], [2, 2, 1, "", "set_absnormkernel"], [2, 2, 1, "", "set_dotproduct_kernel"], [2, 2, 1, "", "set_gaussian_kernel"], [2, 2, 1, "", "set_gaussianper_kernel"], [2, 2, 1, "", "set_kernel"], [2, 2, 1, "", "set_linear_regressor_kernel"], [2, 2, 1, "", "set_matern_norm_kernel"], [2, 2, 1, "", "set_matern_tensor_kernel"], [2, 2, 1, "", "set_multiquadricnorm_kernel"], [2, 2, 1, "", "set_multiquadrictensor_kernel"], [2, 2, 1, "", "set_scalar_product_kernel"], [2, 2, 1, "", "set_sincardsquaretensor_kernel"], [2, 2, 1, "", "set_sincardtensor_kernel"], [2, 2, 1, "", "set_tensornorm_kernel"]], "codpy.core.map_setters": [[2, 2, 1, "", "map_helper"], [2, 1, 1, "", "set"], [2, 2, 1, "", "set_affine_map"], [2, 2, 1, "", "set_erf_map"], [2, 2, 1, "", "set_erfinv_map"], [2, 2, 1, "", "set_exp_map"], [2, 2, 1, "", "set_grid_map"], [2, 2, 1, "", "set_linear_map"], [2, 2, 1, "", "set_log_map"], [2, 2, 1, "", "set_mean_distance_map"], [2, 2, 1, "", "set_min_distance_map"], [2, 2, 1, "", "set_scale_factor_helper"], [2, 2, 1, "", "set_scale_factor_map"], [2, 2, 1, "", "set_scale_std_map"], [2, 2, 1, "", "set_standard_mean_map"], [2, 2, 1, "", "set_standard_min_map"], [2, 2, 1, "", "set_unitcube_erfinv_map"], [2, 2, 1, "", "set_unitcube_map"], [2, 2, 1, "", "set_unitcube_mean_map"], [2, 2, 1, "", "set_unitcube_min_map"]], "codpy.core.op": [[2, 2, 1, "", "Dnm"], [2, 2, 1, "", "Knm"], [2, 2, 1, "", "Knm_inv"], [2, 2, 1, "", "coefficients"], [2, 2, 1, "", "discrepancy_error"], [2, 2, 1, "", "extrapolation"], [2, 2, 1, "", "gradient_denoiser"], [2, 2, 1, "", "interpolation"], [2, 2, 1, "", "norm"], [2, 2, 1, "", "norm_projection"], [2, 2, 1, "", "projection"]], "codpy.kernel": [[7, 1, 1, "", "Kernel"]], "codpy.kernel.Kernel": [[7, 2, 1, "", "Knm"], [7, 2, 1, "", "__call__"], [7, 2, 1, "", "add"], [7, 2, 1, "", "default_kernel_functor"], [7, 2, 1, "", "get_Delta"], [7, 2, 1, "", "get_fx"], [7, 2, 1, "", "get_kernel"], [7, 2, 1, "", "get_knm"], [7, 2, 1, "", "get_knm_inv"], [7, 2, 1, "", "get_order"], [7, 2, 1, "", "get_polynomial_regressor"], [7, 2, 1, "", "get_polynomial_values"], [7, 2, 1, "", "get_theta"], [7, 2, 1, "", "get_x"], [7, 2, 1, "", "get_y"], [7, 2, 1, "", "kernel_distance"], [7, 2, 1, "", "map"], [7, 2, 1, "", "rescale"], [7, 2, 1, "", "select"], [7, 2, 1, "", "set"], [7, 2, 1, "", "set_custom_kernel"], [7, 2, 1, "", "set_fx"], [7, 2, 1, "", "set_kernel_ptr"], [7, 2, 1, "", "set_theta"], [7, 2, 1, "", "set_x"], [7, 2, 1, "", "set_y"], [7, 2, 1, "", "update"], [7, 2, 1, "", "update_set"]], "codpy.lalg": [[8, 3, 1, "", "VanDerMonde"], [8, 1, 1, "", "lalg"]], "codpy.lalg.lalg": [[8, 2, 1, "", "SelfAdjointEigenDecomposition"], [8, 2, 1, "", "cholesky"], [8, 2, 1, "", "fix_nonpositive_semidefinite"], [8, 2, 1, "", "inverse"], [8, 2, 1, "", "lstsq"], [8, 2, 1, "", "polar"], [8, 2, 1, "", "prod"], [8, 2, 1, "", "scalar_product"], [8, 2, 1, "", "svd"], [8, 2, 1, "", "transpose"]], "codpy.pde": [[10, 3, 1, "", "CrankNicolson"], [10, 3, 1, "", "taylor_expansion"]], "codpy.permutation": [[11, 3, 1, "", "grid_projection"], [11, 3, 1, "", "lsap"], [11, 3, 1, "", "map_invertion"], [11, 3, 1, "", "match"], [11, 3, 1, "", "scipy_lsap"]], "codpy.sampling": [[12, 3, 1, "", "MiniBatchkmeans"], [12, 3, 1, "", "get_normals"], [12, 3, 1, "", "get_normals_like"], [12, 3, 1, "", "get_random_normals_like"], [12, 3, 1, "", "get_random_uniforms_like"], [12, 3, 1, "", "get_uniforms"], [12, 3, 1, "", "get_uniforms_like"], [12, 3, 1, "", "kernel_conditional_density_estimator"], [12, 3, 1, "", "kernel_density_estimator"], [12, 3, 1, "", "kmeans"], [12, 3, 1, "", "match"], [12, 3, 1, "", "rejection_sampling"], [12, 3, 1, "", "sharp_discrepancy"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 7, 11, 12, 13], "0": [0, 2, 6, 7, 8, 10, 11, 12, 13], "05": [0, 13], "08": [2, 8, 13], "09": [2, 7, 13], "1": [2, 3, 6, 7, 8, 10, 11, 12, 13], "10": [0, 7, 12, 13], "100": [2, 7, 12, 13], "1000": [2, 7, 13], "10000": [12, 13], "16": 8, "17": [12, 13], "1e": [0, 2, 7, 8, 13], "2": [2, 6, 7, 8, 10, 11, 12, 13], "2000": [12, 13], "2022": 6, "24": 6, "256": [12, 13], "2d": [11, 13], "2k": 7, "3": [6, 7, 8, 11, 12, 13], "300": [12, 13], "3d": [], "4": [8, 11, 13], "42": [2, 12, 13], "4352": [12, 13], "5": [6, 7, 10, 11, 12, 13], "8": [2, 13], "80": 7, "8800": [], "9": [7, 8], "A": [2, 3, 7, 8, 10, 11, 12, 13], "As": 3, "By": 7, "For": [3, 8, 11, 13], "If": [2, 7, 8, 10, 11, 12, 13], "In": 3, "It": [2, 3, 7, 8, 10, 11, 12, 13], "The": [2, 3, 4, 7, 8, 10, 11, 12, 13], "These": 3, "To": 6, "With": [2, 13], "_": [3, 7, 12, 13], "__call__": [5, 7], "_set_polynomial_regressor": 7, "a_i": 8, "abla": [2, 13], "absnorm": [2, 13], "absolut": [2, 13], "accept": [12, 13], "acceptance_ratio": [12, 13], "accepted_sampl": [12, 13], "access": [3, 8], "accord": 3, "accuraci": [10, 13], "act": [], "ad": [7, 8], "adapt": [2, 7, 13], "add": [0, 7, 13], "addit": [2, 7, 10, 13], "address": 3, "adjoint": 8, "adjust": 7, "advanc": 3, "affin": [2, 13], "after": 7, "against": [12, 13], "alg": [0, 5, 9], "algebra": 5, "algorithm": [3, 4, 5, 7, 8, 13], "align": [2, 13], "all": [2, 3, 7, 13], "allow": [2, 3, 7, 13], "along": [2, 3, 13], "alpha": 3, "alreadi": 3, "also": [7, 11, 13], "altern": [6, 11, 13], "an": [2, 3, 7, 8, 10, 11, 12, 13], "analysi": [10, 13], "ani": 3, "anoth": [2, 11, 13], "api": [5, 9], "appli": [2, 3, 7, 12, 13], "applic": 3, "approach": 3, "approx": 7, "approxim": [3, 7, 10, 13], "ar": [2, 3, 4, 6, 7, 10, 12, 13], "arbitrari": [2, 10, 12, 13], "arg": [2, 13], "argument": [2, 7, 10, 12, 13], "arrai": [2, 7, 8, 10, 11, 12, 13], "array_lik": [8, 10, 13], "artheta": [], "assign": [7, 11, 13], "associ": [2, 3, 7, 13], "assum": [12, 13], "attribut": [2, 13], "augment": 7, "avail": [2, 7, 13], "averag": [10, 13], "axi": [2, 13], "b": [7, 8], "backend": 8, "backward": [10, 13], "balanc": [10, 13], "bandwidth": [2, 7, 12, 13], "base": [0, 2, 3, 7, 8, 10, 11, 12, 13], "basi": [2, 3, 13], "basic": 3, "batch": [12, 13], "batch_siz": [12, 13], "befor": [6, 7], "begin": 7, "behavior": [2, 13], "being": 8, "beltrami": 7, "benchmark": 3, "between": [2, 7, 10, 13], "block": 7, "bmatrix": 7, "book": 4, "bool": [2, 7, 13], "bound": 3, "box": 3, "c": [11, 13], "calcul": [2, 8, 12, 13], "call": [3, 7], "callabl": [2, 7, 13], "can": [1, 2, 6, 7, 12, 13], "cardin": [2, 13], "carlo": [12, 13], "case": 8, "cd": 6, "cdf": [12, 13], "cdot": [2, 8, 13], "center": [12, 13], "centroid": [12, 13], "certain": [2, 13], "chapter": 3, "check_": [2, 13], "check_map_str": [2, 5, 13], "checkkernel_str": [2, 5, 13], "choleski": 8, "class": [0, 2, 5, 8, 13], "classic": [3, 7], "classif": [2, 13], "classifi": [0, 7, 13], "clone": 6, "cluster": [12, 13], "codpi": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13], "codpy_alpha": 6, "coeffici": [2, 7, 10, 13], "column": [11, 12, 13], "com": 6, "combin": [2, 13], "come": [11, 13], "compar": [3, 7], "complex": 7, "compon": 3, "comput": [2, 3, 7, 8, 10, 12, 13], "computation": 8, "concaten": 7, "condit": [10, 12, 13], "condition": [12, 13], "conditional_dens": [12, 13], "confid": 3, "configur": [2, 13], "consist": [2, 3, 8, 13], "contain": [2, 3, 12, 13], "content": [5, 9], "context": [2, 13], "continu": [2, 13], "control": [12, 13], "convers": [12, 13], "cope": 8, "core": [2, 3, 5, 7, 9], "correspond": [2, 7, 12, 13], "cost": [11, 13], "cost_matrix": [11, 13], "crank": [10, 13], "cranknicolson": [5, 10, 13], "creat": [2, 11, 13], "criterion": [12, 13], "cube": [2, 13], "current": 7, "custom": [2, 3, 7, 13], "d": [2, 3, 7, 8, 12, 13], "d_": 7, "d_f": 3, "d_sourc": 7, "d_target": 7, "data": [2, 3, 7, 11, 12, 13], "datafram": [2, 11, 12, 13], "dataset": [2, 12, 13], "decompos": 8, "decomposit": 8, "decor": 3, "default": [2, 3, 7, 8, 10, 12, 13], "default_kernel": 7, "default_kernel_functor": 7, "default_multiquadricnormkernel_map": [2, 13], "default_multiquadrictensorkernel_map": [2, 13], "default_sincardsquaretensorkernel_map": [2, 13], "default_sincardtensorkernel_map": [2, 13], "defin": [2, 7, 10, 12, 13], "definit": [2, 3, 7, 8, 13], "delta": 7, "delv": 3, "denois": [2, 13], "denot": [3, 7], "densiti": [12, 13], "depend": [2, 13], "deriv": [10, 13], "descent": 7, "describ": [2, 3, 4, 13], "descript": [4, 5], "design": [2, 3, 8, 11, 13], "desir": 3, "determin": [2, 12, 13], "df": [2, 12, 13], "dict": [2, 7, 10, 11, 12, 13], "dictionari": [10, 13], "differ": 7, "differenti": [2, 3, 10, 13], "diffop": [2, 5, 10, 13], "dim": 7, "dimens": [3, 12, 13], "dimension": [3, 7, 8, 12, 13], "directli": [7, 8], "disc_typ": [2, 13], "discrep": [2, 5, 7, 11, 13], "discrepancy_error": [2, 13], "discrepancy_funct": [2, 5, 13], "discrepancy_valu": [2, 13], "discret": [2, 3, 7, 10, 13], "distanc": [2, 7, 13], "distance_label": [2, 5, 13], "distribut": [2, 11, 12, 13], "diverg": [2, 13], "dnm": [2, 13], "dot": [2, 3, 8, 13], "dotproduct": [2, 13], "dt": [10, 13], "e": [7, 12, 13], "each": [2, 3, 8, 11, 12, 13], "effect": [2, 13], "effici": [2, 3, 7, 12, 13], "eigen": 8, "either": [2, 13], "element": [11, 13], "ell": 7, "els": [2, 13], "empti": [2, 7, 10, 13], "en": 3, "encod": 7, "end": 7, "enhanc": [2, 13], "enjoi": 3, "ensur": [2, 12, 13], "ep": [7, 8], "epsilon": [2, 7, 8, 13], "epsilon_delta": 7, "eq": [], "equal": [2, 7, 13], "equat": [3, 10, 13], "erf": [2, 12, 13], "erfinv": [2, 13], "error": [2, 3, 8, 12, 13], "error_typ": [0, 13], "especi": [10, 13], "estim": [12, 13], "etc": [2, 13], "euler": [10, 13], "eval": [2, 13], "evalu": [12, 13], "exampl": [2, 7, 8, 10, 11, 12, 13], "exist": 7, "exp": [2, 13], "expans": [10, 13], "explain": 3, "explicit": [10, 13], "explor": 3, "exponenti": [2, 13], "ext": [], "extrapol": [2, 3, 7, 13], "f": [3, 7], "f_": 7, "f_z": 3, "facil": 8, "factor": [2, 13], "fail": 8, "fals": [0, 2, 3, 7, 11, 12, 13], "fast": 8, "faster": [11, 13], "featur": [2, 13], "feature1": [12, 13], "feature2": [12, 13], "field": [2, 3, 13], "find": [1, 7, 11, 13], "first": [2, 3, 8, 10, 12, 13], "fit": [2, 7, 13], "fix_nonpositive_semidefinit": 8, "flexibl": [2, 7, 13], "float": [2, 7, 8, 10, 12, 13], "fmu": [2, 13], "follow": [3, 6, 7], "form": [3, 12, 13], "format": [12, 13], "formul": [], "formula": 7, "forward": [10, 13], "fourth": [2, 13], "frac": 7, "framework": [2, 3, 13], "free": 3, "freedom": 3, "frobeniu": 7, "from": [6, 7, 10, 11, 12, 13], "full": 7, "fulli": [3, 10, 13], "function": [2, 5, 7, 8, 10, 11, 12, 13], "functioon": [2, 13], "functool": [2, 13], "fx": [0, 2, 7, 10, 13], "fx_data": [2, 7, 13], "fx_test": [2, 13], "fx_test_pr": [2, 13], "fx_train": [2, 13], "fx_train_df": [2, 13], "fy": [2, 7, 13], "fz": [0, 2, 7, 13], "fz_approx": [10, 13], "g": [7, 12, 13], "gaussian": [2, 7, 12, 13], "gaussianp": [2, 13], "gener": [5, 12, 13], "get": [], "get_delta": 7, "get_fx": 7, "get_i": 7, "get_kernel": 7, "get_kernel_ptr": [2, 13], "get_knm": 7, "get_knm_inv": 7, "get_map_ptr": [], "get_norm": [5, 12, 13], "get_normals_lik": [5, 12, 13], "get_ord": 7, "get_polynomial_regressor": 7, "get_polynomial_valu": 7, "get_random_normals_lik": [5, 12, 13], "get_random_uniforms_lik": [5, 12, 13], "get_theta": 7, "get_uniform": [5, 12, 13], "get_uniforms_lik": [5, 12, 13], "get_x": 7, "git": 6, "github": 6, "give": [10, 11, 13], "given": [2, 3, 7, 8, 10, 12, 13], "gradient": [2, 10, 13], "gradient_denois": [2, 13], "gram": 7, "grant": 8, "greedi": 7, "grid": [2, 13], "grid_project": [5, 11, 13], "guid": 5, "ha": [3, 7], "handl": [3, 11, 13], "have": 6, "help": 3, "helper": [2, 13], "here": [1, 2, 7, 13], "hessian": [2, 10, 13], "hessian_matrix": [2, 13], "heta": [], "high": 3, "higher": 8, "highli": 8, "hilbert": [2, 13], "how": [1, 3], "http": [3, 6], "hungarian": [11, 13], "hybridgreedynystroem": [0, 13], "i": [2, 3, 7, 8, 10, 11, 12, 13], "ideal": [2, 13], "identifi": [2, 13], "ight": [], "implement": [10, 11, 12, 13], "implicit": [10, 13], "import": [12, 13], "improv": 7, "includ": [2, 10, 12, 13], "increas": [2, 13], "index": [5, 11, 13], "indic": [2, 7, 10, 13], "induc": [2, 13], "inform": [2, 13], "ingredi": [2, 13], "init": [2, 12, 13], "initi": [2, 7, 10, 12, 13], "input": [2, 3, 7, 8, 11, 12, 13], "instal": 5, "instanc": [3, 7], "instead": [2, 13], "int": [2, 7, 10, 11, 12, 13], "integ": [], "integr": [12, 13], "intel": 8, "intens": 8, "interest": 3, "interfac": 7, "intermedi": [10, 13], "intern": [2, 3, 7, 13], "interpol": [2, 3, 7, 8, 13], "introduc": 3, "introduct": 5, "inv_gradi": [2, 13], "inv_kernel": 7, "inv_transpose_gradi": [2, 13], "invers": [2, 7, 8, 11, 13], "invert": [8, 11, 13], "inverted_map": [11, 13], "involv": 3, "iter": [12, 13], "ith": [11, 13], "itr": 8, "its": [2, 7, 10, 11, 13], "j": [8, 11, 13], "job": [11, 13], "johnlem": 6, "joint": [12, 13], "jth": [11, 13], "k": [2, 3, 7, 12, 13], "k_": [], "kde": [12, 13], "kei": 3, "kernel": [3, 5, 8, 12, 13], "kernel_conditional_density_estim": [5, 12, 13], "kernel_density_estim": [5, 12, 13], "kernel_dist": 7, "kernel_fun": [2, 12, 13], "kernel_help": [2, 13], "kernel_helper2": 7, "kernel_interfac": [2, 5, 13], "kernel_matrix": 7, "kernel_nam": 7, "kernel_sett": [2, 5, 7, 13], "kernel_str": [2, 13], "keyword": [2, 7, 10, 12, 13], "kinv": [2, 13], "kmean": [5, 12, 13], "knm": [2, 7, 13], "knm_inv": [0, 2, 13], "known": [10, 13], "kwarg": [0, 2, 7, 10, 11, 12, 13], "kxx": [2, 13], "label": [2, 7, 13], "lagrang": 8, "lalg": [5, 8], "laplac": [2, 7, 13], "laplace_oper": [2, 13], "larg": [11, 12, 13], "latent": 7, "ldot": 3, "learn": [3, 6, 7, 12, 13], "least": [2, 7, 8, 13], "left": 7, "length": [12, 13], "lerai": [2, 13], "leray_result": [2, 13], "leray_t": [2, 13], "less": [12, 13], "level": 3, "leverag": [2, 13], "librari": [3, 7, 8], "like": [2, 7, 12, 13], "limit": 7, "linear": [2, 5, 7, 11, 13], "linear_sum_assign": [11, 13], "list": [2, 10, 12, 13], "log": [2, 13], "logarithm": [2, 13], "lower": [2, 7, 13], "lpha": [], "lsap": [5, 7, 11, 13], "lstsq": 8, "lu": 8, "m": [2, 7, 13], "machin": 3, "magnitud": [2, 13], "mai": [10, 12, 13], "main": 3, "maintain": 7, "make": 6, "make_blob": [12, 13], "map": [3, 5, 7, 10, 11, 12, 13], "map_help": [2, 13], "map_invers": [11, 13], "map_invert": [5, 11, 13], "map_nam": 7, "map_sett": [2, 5, 13], "match": [5, 7, 11, 12, 13], "matern": [2, 13], "maternnorm": [2, 7, 13], "math": 8, "mathbb": [3, 7], "mathcal": 3, "mathemat": 4, "matric": [2, 7, 8, 13], "matrix": [2, 3, 7, 8, 10, 11, 13], "mat\u00e9rn": [2, 13], "max": [2, 11, 12, 13], "max_it": [12, 13], "max_nystrom": 7, "max_pool": 7, "maximum": [7, 12, 13], "maxmin": [2, 13], "mean": [2, 7, 12, 13], "meandist": [2, 13], "member": 8, "memori": [2, 7, 13], "mesh": 3, "method": [2, 3, 7, 8, 10, 11, 12, 13], "metric": 7, "might": [8, 11, 13], "min": [2, 13], "mindist": [2, 13], "mini": [12, 13], "minibatchkmean": [5, 12, 13], "minim": [11, 13], "minimum": [2, 13], "mkl": [6, 8], "mmd": [2, 7, 13], "model": [2, 7, 13], "modifi": [2, 7, 13], "modul": [5, 9, 11], "monograph": 3, "mont": [12, 13], "more": 3, "moreov": 3, "much": 3, "multi": [2, 8, 13], "multidimension": [2, 13], "multiquadricnorm": [2, 13], "multiquadrictensor": [2, 13], "munkr": [11, 13], "n": [0, 2, 3, 7, 8, 12, 13], "n_batch": [0, 13], "n_featur": [12, 13], "n_sampl": [12, 13], "n_x": [3, 7], "n_y": 7, "n_z": 3, "nabla": [2, 10, 13], "nabla_inv": [2, 13], "nabla_knm": [2, 13], "nablat": [2, 13], "nablat_inv": [2, 13], "nablat_nabla": [2, 13], "nablat_nabla_inv": [2, 13], "nadaraya": [12, 13], "name": [2, 7, 13], "namespac": 8, "ndarrai": [2, 7, 8, 11, 12, 13], "need": 3, "neq": 7, "new": [2, 3, 7, 10, 13], "next": [3, 10, 13], "nicolson": [10, 13], "nm": [], "nmax": [0, 12, 13], "non": [2, 12, 13], "none": [2, 3, 7, 11, 12, 13], "norm": [2, 7, 13], "norm2": [2, 13], "norm_": 7, "norm_project": [2, 13], "normal": [2, 12, 13], "normifti": [2, 13], "notat": 3, "note": [2, 12, 13], "np": [2, 7, 8, 10, 11, 12, 13], "number": [2, 7, 8, 11, 12, 13], "numer": [3, 8, 10, 12, 13], "numpi": [2, 6, 7, 11, 12, 13], "nx": [2, 13], "nxm": [2, 13], "ny": [11, 12, 13], "nystrom": 7, "obj": [], "object": [0, 2, 7, 8], "observ": [12, 13], "obtain": [3, 7], "offer": [2, 13], "one": [8, 11, 13], "onto": [2, 13], "op": [2, 3, 5, 13], "open": 3, "oper": [2, 4, 5, 7, 13], "optim": [2, 3, 7, 8, 11, 13], "optimal_assign": [11, 13], "option": [2, 3, 7, 8, 10, 11, 12, 13], "order": [2, 7, 8, 10, 13], "org": 3, "origin": 7, "original_map": [11, 13], "oscillatori": [2, 13], "other": [2, 3, 8, 12, 13], "otherwis": [7, 12, 13], "our": 3, "output": [2, 7, 8, 11, 13], "overal": 7, "p": 3, "p_": 7, "packag": 6, "page": 5, "pair": [2, 13], "panda": [2, 6, 11, 12, 13], "parallel": [8, 11, 13], "param": [2, 13], "paramet": [2, 7, 8, 10, 11, 12, 13], "parametr": [2, 12, 13], "part": [12, 13], "partial": [2, 3, 10, 13], "particularli": [12, 13], "partit": [12, 13], "pass": [], "pd": [2, 12, 13], "pde": [3, 5, 9], "penal": [2, 13], "perform": [2, 3, 7, 8, 10, 12, 13], "period": [2, 13], "permut": [5, 7, 9], "pi": [0, 13], "pip": 6, "pipe": [2, 13], "pipe_kernel_fun": [2, 13], "pipe_kernel_ptr": [2, 13], "pipelin": [2, 13], "platform": 3, "point": [2, 7, 10, 11, 13], "polar": 8, "poly_ord": 7, "poly_valu": 7, "polynomi": [2, 7, 8, 13], "polynomial_ord": [2, 13], "pool": 7, "popular": 3, "posit": [2, 7, 13], "power": [], "pprox": [], "precomput": [10, 13], "pred": 7, "predefin": 7, "predict": [3, 7], "prepar": [2, 13], "principl": 7, "print": [8, 11, 13], "prior": 3, "proba": [12, 13], "probabl": [7, 12, 13], "problem": [3, 7, 11, 13], "procedur": 8, "proceed": 6, "process": [12, 13], "prod": [2, 8, 13], "product": [2, 7, 8, 13], "project": [2, 5, 7, 13], "projected_respons": [2, 13], "proper": 3, "properti": 3, "proport": [12, 13], "propos": [12, 13], "proposed_sampl": [12, 13], "provid": [2, 3, 7, 8, 10, 11, 12, 13], "psd": 7, "purpos": [11, 13], "python": 5, "qquad": 3, "quad": [3, 7], "quadric": [2, 13], "question": 3, "r": [3, 7, 8], "rac": [], "rais": [], "rand": 7, "randn": [2, 13], "random": [2, 7, 11, 12, 13], "random_st": [12, 13], "rang": [2, 3, 10, 13], "rapidli": [2, 13], "rate": [12, 13], "ratio": [12, 13], "raw": [2, 13], "re": 3, "recalcul": 7, "rectangular": 8, "reduc": 7, "reg": [2, 7, 13], "reg_matrix": [2, 13], "regress": [2, 7, 13], "regressor": [2, 7, 13], "regular": [2, 7, 8, 13], "reject": [12, 13], "rejection_sampl": [5, 12, 13], "relat": 7, "relationship": [2, 13], "relev": 3, "reli": [3, 8], "remov": [2, 13], "reorder": [11, 13], "repres": [2, 3, 7, 11, 13], "reproduc": [2, 3, 12, 13], "reproducingkernel_hilbert_spac": 3, "requir": [5, 7, 12, 13], "resampl": [11, 13], "rescal": [0, 2, 3, 7, 12, 13], "rescale_param": [2, 12, 13], "resembl": [2, 13], "respect": 7, "respons": [2, 13], "result": [2, 3, 10, 13], "retriev": [3, 7], "return": [2, 7, 8, 10, 11, 12, 13], "right": 7, "rkh": [2, 3, 13], "robust": [2, 13], "row": [8, 12, 13], "safe": 8, "safer": 8, "same": [7, 12, 13], "sampl": [2, 5, 9], "sampler": 4, "scalar": [2, 8, 13], "scalar_product": 8, "scalarproduct": [2, 13], "scale": [2, 3, 11, 13], "scalefactor": [2, 13], "scalestd": [2, 13], "scheme": [8, 10, 13], "scikit": [6, 7, 12, 13], "scipi": [11, 13], "scipy_lsap": [5, 11, 13], "search": 5, "second": [2, 3, 8, 10, 12, 13], "secondari": [2, 7, 13], "section": 3, "seed": [2, 11, 12, 13], "seen": 3, "select": [3, 7, 11, 13], "self": [7, 8], "selfadjointeigendecomposit": 8, "semi": [7, 8], "seri": [10, 13], "set": [2, 5, 7, 12, 13], "set_absnormkernel": [2, 13], "set_affine_map": [2, 13], "set_custom_kernel": 7, "set_dotproduct_kernel": [2, 13], "set_erf_map": [2, 13], "set_erfinv_map": [2, 13], "set_exp_map": [2, 13], "set_fx": 7, "set_gaussian_kernel": [2, 13], "set_gaussianper_kernel": [2, 13], "set_grid_map": [2, 13], "set_i": 7, "set_kernel": [2, 5, 7, 13], "set_kernel_ptr": [2, 7, 13], "set_linear_map": [2, 13], "set_linear_regressor_kernel": [2, 13], "set_log_map": [2, 13], "set_map": [2, 5, 13], "set_map_ptr": [], "set_matern_norm_kernel": [2, 13], "set_matern_tensor_kernel": [2, 13], "set_mean_distance_map": [2, 13], "set_min_distance_map": [2, 13], "set_multiquadricnorm_kernel": [2, 13], "set_multiquadrictensor_kernel": [2, 13], "set_num_thread": [2, 5, 13], "set_polynomial_ord": [2, 13], "set_polynomial_regressor": 7, "set_regular": [2, 13], "set_scalar_product_kernel": [2, 13], "set_scale_factor_help": [2, 13], "set_scale_factor_map": [2, 13], "set_scale_std_map": [2, 13], "set_sincardsquaretensor_kernel": [2, 13], "set_sincardtensor_kernel": [2, 13], "set_standard_mean_map": [2, 13], "set_standard_min_map": [2, 13], "set_tensornorm_kernel": [2, 13], "set_theta": 7, "set_unitcube_erfinv_map": [2, 13], "set_unitcube_map": [2, 13], "set_unitcube_mean_map": [2, 13], "set_unitcube_min_map": [2, 13], "set_verbos": [2, 5, 13], "set_x": 7, "setter": [2, 13], "shape": [2, 7, 12, 13], "sharp": [11, 13], "sharp_discrep": [5, 12, 13], "sharp_discrepancy_se": [11, 13], "sharp_discrepancy_xmax": [11, 13], "should": [12, 13], "significantli": 7, "sim": [], "similar": [2, 7, 11, 13], "simpl": [2, 3, 13], "simul": 3, "sinc": [2, 13], "sincardsquaretensor": [2, 13], "sincardtensor": [2, 13], "singular": 8, "size": [2, 7, 10, 11, 12, 13], "sklearn": [12, 13], "slightli": [11, 13], "small": 8, "smooth": [2, 13], "so": 3, "softmax": [2, 13], "softmin": [2, 13], "softwar": 3, "solut": [7, 10, 13], "solv": [8, 11, 13], "solver": 4, "some": 3, "sourc": [3, 6, 7], "space": [2, 3, 7, 13], "spatial": [2, 13], "specif": 3, "specifi": [2, 8, 11, 12, 13], "squar": [2, 7, 8, 13], "src": [5, 9], "stabil": [8, 10, 13], "stage": 3, "standard": [2, 7, 12, 13], "standardmean": [2, 7, 13], "standardmin": [2, 13], "start_indic": [0, 13], "state": [3, 7, 10, 13], "statist": [2, 3, 13], "step": [3, 10, 13], "stiff": [10, 13], "store": [10, 13], "str": [2, 7, 12, 13], "straightforward": [2, 13], "string": [2, 13], "structur": 7, "sub": [7, 11, 13], "submodul": [5, 9], "subsequ": [2, 3, 13], "subset": 7, "suitabl": [2, 12, 13], "sum": [7, 11, 13], "support": [2, 10, 13], "sure": 6, "svd": 8, "symetr": 8, "system": 8, "t": [8, 10, 13], "tackl": 3, "target": [2, 7, 12, 13], "taylor": [10, 13], "taylor_expans": [5, 10, 13], "taylor_explan": [10, 13], "taylor_ord": [10, 13], "technic": 5, "techniqu": [7, 12, 13], "tensor": [2, 13], "tensornorm": [2, 13], "tertiari": [2, 13], "test": [2, 3, 13], "text": 3, "textit": 3, "than": [11, 12, 13], "thei": [10, 13], "them": [12, 13], "theori": 3, "therefor": 3, "theta": [7, 10, 13], "thi": [2, 3, 7, 8, 10, 11, 12, 13], "third": [2, 13], "threshold": [12, 13], "through": [2, 13], "time": [7, 10, 13], "togeth": 3, "tol": [0, 13], "tool": [3, 8], "total": [11, 13], "train": [3, 7], "transform": [2, 3, 7, 11, 12, 13], "translat": [2, 13], "transport": [3, 7], "transpos": [2, 8, 13], "trim": 7, "true": [2, 7, 11, 12, 13], "tupl": 7, "tutori": [], "two": [2, 3, 8, 12, 13], "type": [2, 7, 8, 10, 11, 12, 13], "type_in": [11, 13], "typic": [2, 10, 13], "u": [3, 8], "u0": [10, 13], "u_next": [10, 13], "unavail": 7, "underli": [], "understand": 3, "uniform": [2, 12, 13], "uniform_sampl": [12, 13], "uniformli": [12, 13], "unit": [2, 13], "unitcub": [2, 13], "up": [2, 7, 13], "updat": 7, "update_set": 7, "us": [1, 2, 3, 6, 7, 8, 10, 11, 12, 13], "usag": [2, 13], "user": 3, "valu": [2, 3, 7, 8, 10, 11, 12, 13], "vandermond": [5, 8], "vari": [2, 13], "variabl": [2, 3, 12, 13], "varianc": [2, 13], "variant": [2, 12, 13], "variat": [2, 13], "variou": [2, 7, 13], "vdm": 8, "vector": [2, 3, 8, 13], "vector_field": [2, 13], "verbos": [2, 12, 13], "version": [11, 13], "via": [12, 13], "wa": [], "watson": [12, 13], "we": 3, "well": 3, "where": [2, 7, 8, 10, 12, 13], "whether": [2, 7, 13], "which": [2, 3, 7, 8, 10, 11, 12, 13], "while": 7, "white": 3, "whole": 3, "wiki": 3, "wikipedia": 3, "within": [2, 13], "without": 8, "work": [2, 13], "worker": [11, 13], "worst": 3, "x": [0, 2, 3, 7, 8, 10, 11, 12, 13], "x_data": [2, 7, 12, 13], "x_i": [2, 8, 13], "x_train_df": [2, 13], "x_val": [12, 13], "xgboost": 7, "xtest": [2, 13], "xtrain": [2, 13], "y": [0, 2, 3, 7, 8, 10, 12, 13], "y_data": [2, 7, 12, 13], "y_j": [2, 13], "y_train_df": [2, 13], "y_val": [12, 13], "yet": [2, 7, 13], "you": [1, 6], "z": [0, 2, 3, 7, 10, 13], "z_data": [2, 7, 13], "z_test_df": [2, 13], "zero": 7}, "titles": ["General algorithms", "Benchmarks", "Kernels and maps", "CodPy description", "Documentation", "Welcome to Codpy\u2019s documentation!", "Installation Guide", "Kernel class", "Linear Algebra module", "&lt;no title&gt;", "PDE module", "Permutation algorithms", "Sampling algorithms", "API"], "titleterms": {"": 5, "alg": 13, "algebra": 8, "algorithm": [0, 11, 12], "api": 13, "benchmark": 1, "class": 7, "clustering_util": [], "codpi": [3, 5], "content": 13, "core": 13, "data_convers": [], "data_process": [], "datafram": [], "descript": 3, "dictionari": [], "document": [4, 5], "exampl": [], "explor": 5, "file": [], "function": 3, "gener": [0, 3], "graphic": [], "guid": 6, "helper": [], "indic": 5, "instal": 6, "interpol": [], "introduct": 3, "kernel": [2, 7], "learn": 5, "librari": 5, "linear": 8, "map": 2, "metric": [], "modul": [8, 10, 13], "oper": 3, "packag": [], "parallel": [], "pde": [10, 13], "permut": [11, 13], "project": 3, "python": 3, "random": [], "refer": 5, "requir": 6, "sampl": [12, 13], "scenario": [], "select": [], "set": 3, "src": 13, "submodul": 13, "tabl": 5, "technic": 4, "ts_tool": [], "tutori": [], "util": [], "welcom": 5}})